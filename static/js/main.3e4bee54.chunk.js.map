{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","idx","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"2SAgBeA,MAbf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,sBAAKG,UAAU,mBAAf,UACI,qIAGA,6D,gFCiCGC,MApCf,YAA0D,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC5C,OACI,qBAAKN,UAAU,QAAf,SACI,eAAC,IAAD,CACEO,GAAI,CACAC,SAAS,gBACTC,MAAQ,CACJP,OAAMC,QAAOC,UAASC,SAAOC,WAJvC,UAQI,qBAAKI,IAAKL,EAAQM,IAAKR,EAAOA,MAAOA,IACrC,sBAAKH,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA+BG,IAC/B,oBAAIH,UAAU,cAAd,SAA6BE,IAC7B,oBAAIF,UAAU,gBAAd,SACKM,EAAOM,KAAI,SAACC,EAAOC,GAChB,OAAO,oBAAcd,UAAU,eAAxB,SAAyCa,GAAhCC,QAGxB,oBAAGd,UAAU,iBAAb,UAA+BI,EAAQW,MAAM,EAAE,KAA/C,kBCgCLC,G,kNArDbP,MAAQ,CACNQ,WAAY,EACZC,OAAS,I,EAUXC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,yDANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAY,IAP1B,2C,uDANZ,WAEEQ,KAAKN,c,oBAeP,WACE,MAA8BM,KAAKhB,MAA3BQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACI,yBAASlB,UAAU,YAAnB,SACGiB,EACC,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACIkB,EAAON,KAAI,SAACc,GACV,OACE,cAAC,EAAD,CAEEC,GAAYD,EAAMC,GAClBxB,MAAYuB,EAAMvB,MAClBC,QAAYsB,EAAMtB,QAClBF,KAAYwB,EAAMxB,KAClBG,OAAYqB,EAAME,mBAClBtB,OAAYoB,EAAMpB,QANNoB,EAAMC,e,GArCrBE,IAAMC,YCgBVC,E,uKAlBX,WACI,MAA8BN,KAAK5B,MAA3BmC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACKC,IAAnBF,EAASvB,OACTwB,EAAQE,KAAK,O,oBAIrB,WACI,IAAQH,EAAaP,KAAK5B,MAAlBmC,SACR,OAAIA,EAASvB,MACF,+BAAOuB,EAASvB,MAAMN,QAGtB,S,GAdE0B,IAAMC,W,MCWZM,MATf,WACI,OACI,sBAAKpC,UAAU,MAAf,UACI,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCWG8B,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,gBAAgBE,UAAWT,QCR7CU,IAASC,OAEP,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.3e4bee54.chunk.js","sourcesContent":["import React from 'react';\nimport './About.css';\n\nfunction About(props) {\n    console.log(props);\n    return (\n        <div className=\"about__container\">\n            <span>\n                \"Freedom is the freedom to say that to plus two make four. If that is granted, all else follows.\"\n            </span>\n            <span>- George Orwell, 1984</span>\n        </div>\n    );\n}\n\n\nexport default About;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Movie.css';\n// Movie에 넘어와야 하는 데이터를 정의-관리하기 위해 propTypes 사용\n// state가 필요없으므로 클래스형이 아닌 함수형 컴포넌트로 작성\n\nfunction Movie( { year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <Link \n              to={{\n                  pathname:'/movie-detail',\n                  state : {\n                      year, title, summary, poster,genres\n                  },\n              }}\n            >\n                <img src={poster} alt={title} title={title} />\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\" >{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">\n                        {genres.map((genre, idx) => {\n                            return <li key={idx} className=\"movie__genre\" >{genre}</li>;\n                        })}\n                    </ul>\n                    <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n                </div>\n            </Link>\n        </div>\n    );\n}\n\nMovie.propTypes = { \n    year    : PropTypes.number.isRequired,\n    title   : PropTypes.string.isRequired,\n    summary : PropTypes.string.isRequired,\n    poster  : PropTypes.string.isRequired,    \n    genres  : PropTypes.arrayOf(PropTypes.string).isRequired\n    // arrayOf(PropTypes.string) 는 문자열을 원소로 하는 배열을 의미함\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from '../components/Movie';\nimport './Home.css';\n\nclass Home extends React.Component {\n  state = {\n    isLoading : true,\n    movies : [],\n  }\n \n\n  componentDidMount() {\n    // 영화 API 호출한다! \n    this.getMovies();\n  }\n\n  // async-await로 이 함수는 시간이 좀 걸린다라고 알려주기 \n  getMovies = async () => { \n    // 구조분해할당으로 movies.data.data.movies 에 접근\n    const {\n      data : {\n        data: { movies },\n      }\n    } = await axios.get('https://yts.mx/api/v2/list_movies.json?sort_by=rating');\n    this.setState({ movies, isLoading : false });\n  }\n\n\n  render(){\n    const { isLoading, movies } = this.state;\n    return (\n        <section className=\"container\">\n          {isLoading ? (\n            <div className=\"loader\">\n              <span className=\"loader__text\">Loading...</span>\n            </div>\n          ) : (\n            <div className=\"movies\">\n              { movies.map((movie) => {\n                  return (\n                    <Movie \n                      key     = { movie.id}\n                      id      = { movie.id} \n                      title   = { movie.title}\n                      summary = { movie.summary}\n                      year    = { movie.year}\n                      poster  = { movie.medium_cover_image}\n                      genres  = { movie.genres}\n                    /> \n                  )\n                })}\n            </div>\n          )}\n        </section>\n    );\n  }\n}\n \nexport default Home;\n","import React from 'react';\n\nclass Detail extends React.Component {\n    componentDidMount(){\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push('/');\n        }\n    }\n\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n            return <span>{location.state.title}</span>;\n        }\n        else {\n            return null;\n        }\n    }\n}\n\nexport default Detail;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation() {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route } from 'react-router-dom'; \nimport About from './routes/About';\nimport Home from './routes/Home'; \nimport Detail from './routes/Detail';\nimport Navigation from './components/Navigation';\n \nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n   \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// ReactDOM.render(보여줄 컴포넌트, 그려질 위치)\n// React는 컴포넌트와 함께 동작하고, 모두 컴포넌트로 구성된다.\nReactDOM.render(\n  // ID가 root인 엘리먼트에 App Component를 그린다.\n  <App />,document.getElementById('root')\n);\n\n "],"sourceRoot":""}